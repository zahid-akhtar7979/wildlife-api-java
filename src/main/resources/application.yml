# Wildlife Conservation Platform API - Base Configuration
# Environment-specific configurations are in separate files

server:
  port: ${PORT:3001}  # Changed to match frontend expectations

spring:
  application:
    name: wildlife-api
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Base database configuration (overridden per environment)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/wildlife_db}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # Base JPA configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  # Database schema management handled manually
  # No automatic migration framework
  
  # Security configuration - JWT settings are configured in wildlife.jwt section below
  
  # File upload configuration - Supports up to 100MB for videos
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:100MB}
      max-request-size: ${MAX_REQUEST_SIZE:100MB}
      enabled: true
      resolve-lazily: true
  
  # JSON configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

# Management endpoints configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

# Logging configuration
logging:
  level:
    com.wildlife: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: ${LOG_FILE:./logs/wildlife-api.log}

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_ENABLED:true}

# Application specific configuration
wildlife:
  # JWT Authentication settings
  jwt:
    secret: ${JWT_SECRET:wildlife-api-secret-key-please-change-in-production-environment}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
    issuer: ${JWT_ISSUER:wildlife-api}
  
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}
  
  pagination:
    default-page-size: ${DEFAULT_PAGE_SIZE:10}
    max-page-size: ${MAX_PAGE_SIZE:100}
  
  upload:
    max-image-size: ${MAX_IMAGE_SIZE:10MB}
    max-video-size: ${MAX_VIDEO_SIZE:100MB}
    max-multiple-images: ${MAX_MULTIPLE_IMAGES:10}
    allowed-image-types: ${ALLOWED_IMAGE_TYPES:image/jpeg,image/jpg,image/png,image/webp,image/avif}
    allowed-video-types: ${ALLOWED_VIDEO_TYPES:video/mp4,video/mov,video/avi,video/mkv,video/webm} 