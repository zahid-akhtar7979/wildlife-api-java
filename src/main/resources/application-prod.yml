# Production Environment Configuration
# Secrets and sensitive configs should come from external systems (AWS Parameter Store, etc.)

spring:
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update  # Allow schema creation/updates for Railway deployment
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false

  # Production database settings - Railway provides these via environment variables
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_MIN_IDLE:10}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}

  # Production relies on manual database scripts

# Production logging - structured JSON for log aggregation
logging:
  level:
    com.wildlife: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/wildlife-api/application.log

# Production management endpoints - restricted access
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized  # Show details for debugging Railway issues
  # server:
  #   port: 8081  # DISABLED: Railway expects health check on main port

# Production wildlife configuration
wildlife:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://wildlife.your-domain.com}
    allow-credentials: true
    max-age: 86400  # 24 hours

  pagination:
    default-page-size: ${DEFAULT_PAGE_SIZE:20}
    max-page-size: ${MAX_PAGE_SIZE:100}

  jwt:
    secret: ${JWT_SECRET:wildlife-dev-secret-key-change-in-production}  # Must be set via environment variable
    expiration: ${JWT_EXPIRATION:3600000}  # 1 hour in production
    issuer: ${JWT_ISSUER:wildlife-api}

# Swagger disabled for production security
springdoc:
  swagger-ui:
    enabled: true
  api-docs:
    enabled: true

server:
  error:
    include-message: on_param  # Enable for Railway debugging
    include-binding-errors: on_param
    include-stacktrace: on_param  # Temporary for Railway debugging
    include-exception: true

cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:dc2tqyj5d}
  api-key: ${CLOUDINARY_API_KEY:133449986291256}
  api-secret: ${CLOUDINARY_API_SECRET:P80ZPfvd4LOWCN4_ew4VGwxbb7Y}